// <auto-generated />
using System;
using AvyyanBackend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvyyanBackend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251003094500_AddGeneratedBarcodesTable")]
    partial class AddGeneratedBarcodesTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.GeneratedBarcode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("GeneratedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RollAssignmentId")
                        .HasColumnType("integer");

                    b.Property<int>("RollNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RollAssignmentId");

                    b.ToTable("GeneratedBarcodes", (string)null);
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.MachineAllocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Feeders")
                        .HasColumnType("integer");

                    b.Property<int>("MachineId")
                        .HasColumnType("integer");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("NumberOfNeedles")
                        .HasColumnType("integer");

                    b.Property<int>("ProductionAllotmentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("RollPerKg")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("RollBreakdown")
                        .HasColumnType("text");

                    b.Property<int>("RPM")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalLoadWeight")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("TotalRolls")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("EstimatedProductionTime")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductionAllotmentId");

                    b.ToTable("MachineAllocations", (string)null);
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.ProductionAllotment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ActualQuantity")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("AllotmentId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ColourCode")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Composition")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Counter")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Diameter")
                        .HasColumnType("integer");

                    b.Property<decimal>("Efficiency")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("FabricType")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Gauge")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ReqFinishGsm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReqFinishWidth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReqGreyGsm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ReqGreyWidth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("integer");

                    b.Property<int>("SalesOrderItemId")
                        .HasColumnType("integer");

                    b.Property<string>("SlitLine")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<decimal>("StitchLength")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("TotalProductionTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TubeWeight")
                        .HasColumnType("decimal(18,3)");

                    b.Property<string>("TapeColor")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("VoucherNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("YarnCount")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("YarnLotNo")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductionAllotments", (string)null);

                    b.HasIndex("AllotmentId")
                        .IsUnique();

                    b.HasIndex("VoucherNumber")
                        .IsUnique();
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.RollAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AssignedRolls")
                        .HasColumnType("decimal(18,3)");

                    b.Property<decimal>("GeneratedStickers")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("MachineAllocationId")
                        .HasColumnType("integer");

                    b.Property<string>("OperatorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("RemainingRolls")
                        .HasColumnType("decimal(18,3)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("MachineAllocationId");

                    b.ToTable("RollAssignments", (string)null);
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.GeneratedBarcode", b =>
                {
                    b.HasOne("AvyyanBackend.Models.ProAllot.RollAssignment", "RollAssignment")
                        .WithMany("GeneratedBarcodes")
                        .HasForeignKey("RollAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RollAssignment");
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.MachineAllocation", b =>
                {
                    b.HasOne("AvyyanBackend.Models.ProAllot.ProductionAllotment", "ProductionAllotment")
                        .WithMany("MachineAllocations")
                        .HasForeignKey("ProductionAllotmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionAllotment");
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.RollAssignment", b =>
                {
                    b.HasOne("AvyyanBackend.Models.ProAllot.MachineAllocation", "MachineAllocation")
                        .WithMany("RollAssignments")
                        .HasForeignKey("MachineAllocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MachineAllocation");
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.ProductionAllotment", b =>
                {
                    b.Navigation("MachineAllocations");
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.MachineAllocation", b =>
                {
                    b.Navigation("RollAssignments");
                });

            modelBuilder.Entity("AvyyanBackend.Models.ProAllot.RollAssignment", b =>
                {
                    b.Navigation("GeneratedBarcodes");
                });
#pragma warning restore 612, 618
        }
    }
}